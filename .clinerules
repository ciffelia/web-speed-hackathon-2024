# Cyber TOON (Web Speed Hackathon 2024)

このアプリケーションは、マンガやコミックのようなデジタルコンテンツを提供するプラットフォームで、モノレポ構造を採用しています。以下にアプリケーションの主要な設計要素を説明します。

## 全体アーキテクチャ

このプロジェクトは pnpm ワークスペースを使用したモノレポ構造で、以下の主要なワークスペースで構成されています：

1. **app** - ユーザー向けフロントエンドアプリケーション
2. **admin** - 管理者向けフロントエンドアプリケーション
3. **server** - バックエンドサーバー
4. **client** - 共有クライアントコード（サービスワーカーなど）
5. **schema** - データモデルとAPI定義
6. **image-encrypt** - 画像の暗号化/復号化ユーティリティ
7. **testing** - テストユーティリティ

## データモデル

アプリケーションは以下の主要なデータモデルで構成されています：

- **author** - 作者情報（名前、説明、画像）
- **book** - 書籍情報（名前、説明、作者、画像）
- **episode** - エピソード情報（名前、説明、章番号、書籍ID、画像）
- **episodePage** - エピソードのページ（ページ番号、エピソードID、画像）
- **image** - 画像メタデータ
- **feature** - 特集コンテンツ
- **ranking** - ランキング情報
- **release** - リリース情報（曜日ごとの更新など）
- **user** - ユーザー情報

これらのモデルは SQLite データベースに保存され、Drizzle ORMを使用してアクセスされています。

## バックエンド

バックエンドは Hono フレームワークを使用して実装されており、以下の主要なコンポーネントがあります：

- **API ルート** - RESTful API（OpenAPI/Swagger でドキュメント化）
- **SSR** - サーバーサイドレンダリング
- **静的ファイル配信** - 静的アセットの提供
- **画像処理** - 画像の配信と変換

ミドルウェアとして以下が実装されています：
- CORS サポート
- キャッシュコントロール
- 圧縮（zstd）
- セキュリティヘッダー

## フロントエンド

フロントエンドは React と React Router を使用して実装されており、以下の主要なページがあります：

- **トップページ** - ピックアップ、ランキング、本日更新のコンテンツを表示
- **書籍詳細ページ** - 書籍の詳細情報とエピソード一覧
- **エピソード詳細ページ** - エピソードのページを表示
- **作者詳細ページ** - 作者の情報と作品一覧
- **検索ページ** - コンテンツ検索

データ取得には SWR を使用し、スタイリングには styled-components を採用しています。

## パフォーマンス最適化

アプリケーションには以下のパフォーマンス最適化が実装されています：

1. **サービスワーカー** - クライアントサイドでのリクエスト処理と変換
   - リクエスト並列数の制限（PQueue）
   - Jitter 処理によるサーバー負荷分散
   - zstd 圧縮の対応

2. **画像最適化**
   - JpegXL 形式のサポート（BMP への変換）
   - 画像の暗号化/復号化メカニズム（セキュリティまたは最適化のため）

3. **その他の最適化**
   - Suspense を使用した非同期データ読み込み
   - キャッシュコントロール

## セキュリティ

- セキュアヘッダーの実装
- 画像の暗号化/復号化メカニズム（コンテンツ保護）
- CORS 設定

## 開発環境

- TypeScript を使用した型安全な開発
- ESLint と Prettier によるコード品質管理
- Docker による開発・デプロイメント環境
